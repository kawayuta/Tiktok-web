#!/usr/bin/env ruby
# frozen_string_literal: true

# Trap interrupts to quit cleanly. See
# https://twitter.com/mitchellh/status/283014103189053442
Signal.trap("INT") { abort }

require "bundler/setup"
require "benchmark/ips"
require "sidekiq-unique-jobs"

ITERATIONS ||= 10_000
LOCK_TYPES = %w[
  until_executed
  until_expired
  until_and_while_executing
  until_executing
  while_executing
].freeze

Benchmark.ips do |x|
  x.config(time: 180, warmup: 2)
  x.report("locksmith lock and unlock") do |_times|
    item = {
      "ttl" => rand(10),
      "jid" => SecureRandom.hex,
      "unique_digest" => SecureRandom.hex,
      "lock" => LOCK_TYPES.sample,
    }
    locksmith = SidekiqUniqueJobs::Locksmith.new(item)
    locksmith.lock
    locksmith.unlock
  end

  x.compare!
end
